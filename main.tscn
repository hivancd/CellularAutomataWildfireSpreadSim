[gd_scene load_steps=14 format=3 uid="uid://cp4pyravsv5lt"]

[ext_resource type="Script" path="res://addons/cellular_automata_studio/cellular_automata_studio_2d.gd" id="1_g2lpm"]
[ext_resource type="Script" path="res://examples/stand_alone.gd" id="1_k7f4v"]
[ext_resource type="Script" path="res://addons/cellular_automata_studio/string_color.gd" id="2_6c80k"]

[sub_resource type="CodeHighlighter" id="CodeHighlighter_diay8"]
number_color = Color(1, 1, 0.501961, 1)
symbol_color = Color(1, 0.501961, 1, 1)
function_color = Color(0.501961, 1, 1, 1)
member_variable_color = Color(1, 0.501961, 0.501961, 1)

[sub_resource type="CodeHighlighter" id="CodeHighlighter_1sujs"]
number_color = Color(1, 1, 0, 1)
symbol_color = Color(1, 0, 1, 1)
function_color = Color(0, 1, 1, 1)
member_variable_color = Color(1, 0.501961, 0.501961, 1)

[sub_resource type="CodeHighlighter" id="CodeHighlighter_8t2bd"]
number_color = Color(1, 1, 0, 1)
symbol_color = Color(1, 0, 1, 1)
function_color = Color(0, 1, 1, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_wghjs"]
noise_type = 0
seed = 1
frequency = 0.6163

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_0uf6p"]
noise = SubResource("FastNoiseLite_wghjs")

[sub_resource type="Resource" id="Resource_l3xlw"]
script = ExtResource("2_6c80k")
text = "ground"
color = Color(0.655483, 0.422915, 0.16618, 1)

[sub_resource type="Resource" id="Resource_skgpx"]
script = ExtResource("2_6c80k")
text = "water"
color = Color(9.43363e-06, 0.654528, 0.880101, 1)

[sub_resource type="Resource" id="Resource_gmqwc"]
script = ExtResource("2_6c80k")
text = "grass"
color = Color(0.203399, 0.65254, 3.85046e-07, 1)

[sub_resource type="Resource" id="Resource_hwxnk"]
script = ExtResource("2_6c80k")
text = "fire"
color = Color(0.943965, 0.608288, 1.92523e-06, 1)

[sub_resource type="Resource" id="Resource_eltdg"]
script = ExtResource("2_6c80k")
text = "ashes"
color = Color(0.0807833, 0.0807833, 0.0807833, 1)

[node name="VBoxMain" type="VBoxContainer"]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
size_flags_horizontal = 3
size_flags_vertical = 3
script = ExtResource("1_k7f4v")

[node name="HBoxToolbar" type="HBoxContainer" parent="."]
custom_minimum_size = Vector2(48, 48)
layout_mode = 2

[node name="HBoxContainer" type="HBoxContainer" parent="HBoxToolbar"]
layout_mode = 2
size_flags_horizontal = 3

[node name="OptionButton" type="OptionButton" parent="HBoxToolbar/HBoxContainer"]
layout_mode = 2
theme_override_font_sizes/font_size = 18
item_count = 4
selected = 1
popup/item_0/text = "Blank grid"
popup/item_0/id = 0
popup/item_1/text = "Random grid"
popup/item_1/id = 1
popup/item_2/text = "Procedural"
popup/item_2/id = 2
popup/item_3/text = "Custom"
popup/item_3/id = 3

[node name="OptionButton2" type="OptionButton" parent="HBoxToolbar/HBoxContainer"]
layout_mode = 2
theme_override_font_sizes/font_size = 18
item_count = 3
selected = 0
popup/item_0/text = "INIT"
popup/item_0/id = 0
popup/item_1/text = "EXEC"
popup/item_1/id = 1
popup/item_2/text = "FUNC"
popup/item_2/id = 2

[node name="ButtonCompile" type="Button" parent="HBoxToolbar/HBoxContainer"]
layout_mode = 2
theme_override_font_sizes/font_size = 18
text = "Compile"

[node name="ButtonStep" type="Button" parent="HBoxToolbar/HBoxContainer"]
custom_minimum_size = Vector2(48, 48)
layout_mode = 2
tooltip_text = "Execute one step of your code"
theme_override_font_sizes/font_size = 18
text = "Step / Pause"

[node name="ButtonExec" type="Button" parent="HBoxToolbar/HBoxContainer"]
custom_minimum_size = Vector2(48, 48)
layout_mode = 2
tooltip_text = "Execute your code"
theme_override_font_sizes/font_size = 18
text = "Play / Pause"

[node name="LabelTitle" type="Label" parent="HBoxToolbar"]
layout_mode = 2
theme_override_font_sizes/font_size = 18
text = " Cellular Automata Studio (standalone version 1.0) "

[node name="VSplitContainer" type="VSplitContainer" parent="."]
layout_mode = 2
size_flags_vertical = 3

[node name="StandAlone" type="HSplitContainer" parent="VSplitContainer"]
layout_mode = 2
size_flags_vertical = 3

[node name="VBoxCode" type="VBoxContainer" parent="VSplitContainer/StandAlone"]
layout_mode = 2
size_flags_horizontal = 3

[node name="TextEditInit" type="TextEdit" parent="VSplitContainer/StandAlone/VBoxCode"]
custom_minimum_size = Vector2(128, 256)
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_font_sizes/font_size = 18
text = "if (present_state==0)
	future_state=ground;
if (present_state==1)
	future_state=water;
if (present_state==2){
	future_state=grass;
	data_count[p] = 37;}
if (x==128 && y==115){
	future_state=fire;
	data_count[p]=38;}"
placeholder_text = "// INITIALISATION CODE (step = 0)
// You will use the following variables:
//    uint WSX, WSY (global WorkSpace in X and Y)
//    uint x,y,p (cell position)
//    int present_state (cell state. An integer random value from int.MIN and int.MAX)
//    int future_state (the new cell state)"
syntax_highlighter = SubResource("CodeHighlighter_diay8")

[node name="TextEditExec" type="TextEdit" parent="VSplitContainer/StandAlone/VBoxCode"]
visible = false
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
size_flags_stretch_ratio = 2.0
theme_override_font_sizes/font_size = 18
text = "//EXEC
int grassh_count = 37;
int fire_duration = 1000;

if (present_state==grass){
	if (data_count[p]<=0)
		{future_state=fire;
		data_count[p]=fire_duration;}
	else
		data_count[p]=data_count[p]-int(nb_neighbors_8(x,y,fire));
}

if (present_state==fire)
	if (data_count[p]<=0){
	future_state=ashes;}
	else data_count[p]=data_count[p]-1;
"
placeholder_text = "// EXECUTION CODE (step >= 1)
// You will use the following variables:
//    uint WSX, WSY (global WorkSpace in X and Y)
//    uint x,y,p (cell position)
//    int present_state (current cell state. Do not modify)
//    int future_state (the new cell state)"
syntax_highlighter = SubResource("CodeHighlighter_1sujs")

[node name="TextEditFunc" type="TextEdit" parent="VSplitContainer/StandAlone/VBoxCode"]
visible = false
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
size_flags_stretch_ratio = 2.0
theme_override_font_sizes/font_size = 18
placeholder_text = "// FUNCTIONS CODE
// Write all your functions here in GLSL
// You can use the following global variables:
//    uint WSX, WSY : global WorkSpace in X and Y
// Example
// int your_function(int x, int y) {
//    if (x == WSX/2 && y == WSY/2)
//       return my_state_1;
//    else
//       return my_state_2;
// }
"
syntax_highlighter = SubResource("CodeHighlighter_8t2bd")

[node name="TextureRect" type="TextureRect" parent="VSplitContainer/StandAlone"]
custom_minimum_size = Vector2(256, 256)
layout_mode = 2
size_flags_horizontal = 3
texture = SubResource("NoiseTexture2D_0uf6p")
expand_mode = 1

[node name="TextEdit" type="TextEdit" parent="VSplitContainer"]
custom_minimum_size = Vector2(0, 100)
layout_mode = 2
editable = false

[node name="LabelErrors" type="RichTextLabel" parent="VSplitContainer"]
visible = false
clip_contents = false
custom_minimum_size = Vector2(0, 80)
layout_mode = 2
theme_override_font_sizes/normal_font_size = 18
theme_override_font_sizes/bold_font_size = 18
theme_override_font_sizes/italics_font_size = 18
theme_override_font_sizes/bold_italics_font_size = 18
theme_override_font_sizes/mono_font_size = 18
text = "Output :

"

[node name="CellularAutomata2D" type="Node" parent="." node_paths=PackedStringArray("display_in")]
script = ExtResource("1_g2lpm")
print_step = true
pause = true
WSX = 32
WSY = 32
display_in = NodePath("../VSplitContainer/StandAlone/TextureRect")
cell_states = Array[Object]([SubResource("Resource_l3xlw"), SubResource("Resource_skgpx"), SubResource("Resource_gmqwc"), SubResource("Resource_hwxnk"), SubResource("Resource_eltdg")])
init_code = "
// INITIALISATION CODE (step = 0)
// You can use the following variables:
//    uint WSX, WSY (global WorkSpace in X and Y)
//    uint x,y,p (cell position)
//    int present_state (cell state. An integer random value from int.MIN and int.MAX)
//    int future_state (the new cell state)
"
exec_code = "
// EXECUTION CODE (step >= 1)
// You can use the following variables:
//    uint WSX, WSY (global WorkSpace in X and Y)
//    uint x,y,p (cell position)
//    int present_state (current cell state. Do not modify)
//    int future_state (the new cell state)
"

[connection signal="item_selected" from="HBoxToolbar/HBoxContainer/OptionButton2" to="." method="_on_option_button_2_item_selected"]
[connection signal="pressed" from="HBoxToolbar/HBoxContainer/ButtonCompile" to="." method="_on_button_compile_pressed"]
[connection signal="pressed" from="HBoxToolbar/HBoxContainer/ButtonStep" to="CellularAutomata2D" method="_on_button_step"]
[connection signal="pressed" from="HBoxToolbar/HBoxContainer/ButtonExec" to="CellularAutomata2D" method="_on_button_play"]
