[gd_scene load_steps=12 format=3 uid="uid://cn0dsh2q6mbwq"]

[ext_resource type="Script" path="res://addons/cellular_automata_studio/cellular_automata_studio_2d.gd" id="1_g2lpm"]
[ext_resource type="Script" path="res://addons/cellular_automata_studio/string_color.gd" id="2_6c80k"]

[sub_resource type="CodeHighlighter" id="CodeHighlighter_diay8"]
number_color = Color(1, 1, 0.501961, 1)
symbol_color = Color(1, 0.501961, 1, 1)
function_color = Color(0.501961, 1, 1, 1)
member_variable_color = Color(1, 0.501961, 0.501961, 1)

[sub_resource type="CodeHighlighter" id="CodeHighlighter_1sujs"]
number_color = Color(1, 1, 0, 1)
symbol_color = Color(1, 0, 1, 1)
function_color = Color(0, 1, 1, 1)
member_variable_color = Color(1, 0.501961, 0.501961, 1)

[sub_resource type="CodeHighlighter" id="CodeHighlighter_8t2bd"]
number_color = Color(1, 1, 0, 1)
symbol_color = Color(1, 0, 1, 1)
function_color = Color(0, 1, 1, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_wghjs"]
noise_type = 0
seed = 1
frequency = 0.6163

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_0uf6p"]
noise = SubResource("FastNoiseLite_wghjs")

[sub_resource type="Resource" id="Resource_l3xlw"]
script = ExtResource("2_6c80k")
text = "state_0"
color = Color(1, 1, 1, 1)

[sub_resource type="Resource" id="Resource_skgpx"]
script = ExtResource("2_6c80k")
text = "state_1"
color = Color(0, 0.764706, 0.768627, 1)

[sub_resource type="Resource" id="Resource_gmqwc"]
script = ExtResource("2_6c80k")
text = "state_2"
color = Color(0.870588, 0, 0.901961, 1)

[sub_resource type="Resource" id="Resource_hwxnk"]
script = ExtResource("2_6c80k")
text = "state_3"
color = Color(0.717647, 0.701961, 0, 1)

[node name="VBoxMain" type="VBoxContainer"]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="HBoxToolbar" type="HBoxContainer" parent="."]
custom_minimum_size = Vector2(48, 48)
layout_mode = 2

[node name="HBoxContainer" type="HBoxContainer" parent="HBoxToolbar"]
layout_mode = 2
size_flags_horizontal = 3

[node name="ButtonCompile" type="Button" parent="HBoxToolbar/HBoxContainer"]
custom_minimum_size = Vector2(48, 48)
layout_mode = 2
tooltip_text = "Compile your code"
theme_override_font_sizes/font_size = 24
text = "Compile"

[node name="ButtonStep" type="Button" parent="HBoxToolbar/HBoxContainer"]
custom_minimum_size = Vector2(48, 48)
layout_mode = 2
tooltip_text = "Execute one step of your code"
theme_override_font_sizes/font_size = 24
text = "Step"

[node name="ButtonExec" type="Button" parent="HBoxToolbar/HBoxContainer"]
custom_minimum_size = Vector2(48, 48)
layout_mode = 2
tooltip_text = "Execute your code"
theme_override_font_sizes/font_size = 24
text = "Play"

[node name="LabelTitle" type="Label" parent="HBoxToolbar"]
layout_mode = 2
theme_override_font_sizes/font_size = 24
text = " Cellular Automata Studio (standalone version 1.0) "

[node name="StandAlone" type="HSplitContainer" parent="."]
layout_mode = 2
size_flags_vertical = 3

[node name="VBoxCode" type="VBoxContainer" parent="StandAlone"]
layout_mode = 2
size_flags_horizontal = 3

[node name="VSplitContainer2" type="VSplitContainer" parent="StandAlone/VBoxCode"]
layout_mode = 2
size_flags_vertical = 3

[node name="VSplitContainer" type="VSplitContainer" parent="StandAlone/VBoxCode/VSplitContainer2"]
layout_mode = 2
size_flags_vertical = 3

[node name="VBoxContainer" type="VBoxContainer" parent="StandAlone/VBoxCode/VSplitContainer2/VSplitContainer"]
layout_mode = 2
size_flags_vertical = 3

[node name="Label" type="Label" parent="StandAlone/VBoxCode/VSplitContainer2/VSplitContainer/VBoxContainer"]
layout_mode = 2
text = "Initialisation"
horizontal_alignment = 1

[node name="TextEditInit" type="TextEdit" parent="StandAlone/VBoxCode/VSplitContainer2/VSplitContainer/VBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_font_sizes/font_size = 14
text = "int state = abs( present_state ) % 4 ;
if(state == 0)
	future_state = state_0;
if(state == 1)
	future_state = state_1;
if(state == 2)
	future_state = state_2;
if(state == 3)
	future_state = state_3;
"
syntax_highlighter = SubResource("CodeHighlighter_diay8")

[node name="VBoxContainer2" type="VBoxContainer" parent="StandAlone/VBoxCode/VSplitContainer2/VSplitContainer"]
layout_mode = 2
size_flags_vertical = 3

[node name="Label2" type="Label" parent="StandAlone/VBoxCode/VSplitContainer2/VSplitContainer/VBoxContainer2"]
layout_mode = 2
text = "Execution"
horizontal_alignment = 1

[node name="TextEditExec" type="TextEdit" parent="StandAlone/VBoxCode/VSplitContainer2/VSplitContainer/VBoxContainer2"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
size_flags_stretch_ratio = 2.0
theme_override_font_sizes/font_size = 14
text = "if (present_state == state_0) {
	uint nb_1 = nb_neighbors_8(x,y,state_1);
	if ( nb_1 >= 3)	future_state = state_1;
}
if (present_state == state_1) {
	uint nb_2 = nb_neighbors_8(x,y,state_2);
	if ( nb_2 >= 3)	future_state = state_2;
}
if (present_state == state_2) {
	uint nb_3 = nb_neighbors_8(x,y,state_3);
	if ( nb_3 >= 3)	future_state = state_3;
}
if (present_state == state_3) {
	uint nb_0 = nb_neighbors_8(x,y,state_0);
	if ( nb_0 >= 3)	future_state = state_0;
}
"
syntax_highlighter = SubResource("CodeHighlighter_1sujs")

[node name="VBoxContainer" type="VBoxContainer" parent="StandAlone/VBoxCode/VSplitContainer2"]
layout_mode = 2
size_flags_vertical = 3

[node name="Label3" type="Label" parent="StandAlone/VBoxCode/VSplitContainer2/VBoxContainer"]
layout_mode = 2
text = "Functions"
horizontal_alignment = 1

[node name="TextEditFunc" type="TextEdit" parent="StandAlone/VBoxCode/VSplitContainer2/VBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
size_flags_stretch_ratio = 2.0
theme_override_font_sizes/font_size = 14
text = "// FUNCTIONS CODE
// Write all your functions here in GLSL
// You can use the following global variables:
//    uint WSX, WSY : global WorkSpace in X and Y
// Example
// int your_function(int x, int y) {
//    if (x == WSX/2 && y == WSY/2)
//       return my_state_1;
//    else
//       return my_state_2;
// }
"
syntax_highlighter = SubResource("CodeHighlighter_8t2bd")

[node name="TextureRect" type="TextureRect" parent="StandAlone"]
layout_mode = 2
size_flags_horizontal = 3
texture = SubResource("NoiseTexture2D_0uf6p")

[node name="CellularAutomata2D" type="Node" parent="." node_paths=PackedStringArray("display_in")]
script = ExtResource("1_g2lpm")
print_step = true
print_generated_code = true
pause = true
WSX = 512
WSY = 512
display_in = NodePath("../StandAlone/TextureRect")
cell_states = Array[Object]([SubResource("Resource_l3xlw"), SubResource("Resource_skgpx"), SubResource("Resource_gmqwc"), SubResource("Resource_hwxnk")])
init_code = "
// INITIALISATION CODE (step = 0)
// You can use the following variables:
//    uint WSX, WSY (global WorkSpace in X and Y)
//    uint x,y,p (cell position)
//    int present_state (cell state. An integer random value from int.MIN and int.MAX)
//    int future_state (the new cell state)
"
exec_code = "
// EXECUTION CODE (step >= 1)
// You can use the following variables:
//    uint WSX, WSY (global WorkSpace in X and Y)
//    uint x,y,p (cell position)
//    int present_state (current cell state. Do not modify)
//    int future_state (the new cell state)
"

[node name="LabelOutput" type="Label" parent="."]
layout_mode = 2
size_flags_vertical = 1
theme_override_font_sizes/font_size = 14
text = "Output :

"
clip_text = true

[connection signal="pressed" from="HBoxToolbar/HBoxContainer/ButtonCompile" to="CellularAutomata2D" method="_on_button_compile"]
[connection signal="pressed" from="HBoxToolbar/HBoxContainer/ButtonStep" to="CellularAutomata2D" method="_on_button_step"]
[connection signal="pressed" from="HBoxToolbar/HBoxContainer/ButtonExec" to="CellularAutomata2D" method="_on_button_play"]
